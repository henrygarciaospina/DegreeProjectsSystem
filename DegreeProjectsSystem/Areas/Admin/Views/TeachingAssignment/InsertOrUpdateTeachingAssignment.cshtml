@model DegreeProjectsSystem.Models.ViewModels.TeachingAssignmentViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var title = "Crear Asignación Docente";
}

<form class="form-horizontal" role="form" method="post">
    <div class="row p-3 border-0">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    </div>
    @if (Model.TeachingAssignment.Id != 0)
    {
        // Actualizar
        title = "Actualizar Asignación Docente";
        <input type="hidden" asp-for="TeachingAssignment.Id" />
    }


    <div class="container">
        <div class="col-12 border-bottom mt-5">
            <h2 class="text-primary">@title</h2>
        </div>

        <div class="row mt-2">
            <div class="col-4 mb-3">
                <label asp-for="TeachingAssignment.StudentRequest.Solicitude.TitleDegreeWork"></label>
            </div>
            <div class="col-8 mb-3">
                @Html.DropDownListFor(ta => ta.TeachingAssignment.StudentRequest.SolicitudeId, Model.StudentRequestList,
                "Seleccione una solictud....",
                new { @class = "form-control" })
                <span asp-validation-for="TeachingAssignment.StudentRequest.SolicitudeId" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group row">
            <div class="col-4 mb-3">
                <label asp-for="TeachingAssignment.Person.Names"></label>
            </div>
            <div class="col-8 mb-3">
                @Html.DropDownListFor(ta => ta.TeachingAssignment.PersonId, Model.PersonList,
                       "Seleccione un docente....",
                       new { @class = "form-control" })
                <span asp-validation-for="TeachingAssignment.PersonId" class="text-danger"></span>
            </div>
        </div>
        <div class="row">
            <div class="form-group row">
                <div class="col-4 mb-3">
                    <label asp-for="TeachingAssignment.TeachingFunction.Name"></label>
                </div>
                <div class="col-8 mb-3">
                    @Html.DropDownListFor(tf => tf.TeachingAssignment.TeachingFunctionId, Model.TeachingFunctionList,
                           "Seleccione una función docente....",
                           new { @class = "form-control" })
                    <span asp-validation-for="TeachingAssignment.TeachingFunctionId" class="text-danger"></span>
                </div>
            </div>
            <div class="col-sm-12">
                <label asp-for="TeachingAssignment.AssigmentDate" class="control-label"></label>
                <input id="datePicker" asp-for="TeachingAssignment.AssigmentDate" type="text" class="form-control" name="ActDate" />
                <span asp-validation-for="TeachingAssignment.AssigmentDate" class="text-danger"></span>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <label asp-for="TeachingAssignment.Observations"></label>
                <textarea asp-for="TeachingAssignment.Observations" class="form-control" rows="4" placeholder="Ejemplo: Correo corporativo.">
            </textarea>
            </div>
            <div class="col-sm-6">
                <div class="col-4 mb-3">
                    <label asp-for="TeachingAssignment.Active"></label>
                </div>
                <div class="col-4 mb-3">
                    <select asp-for="TeachingAssignment.Active" class="form-control">
                        <option value=true>Activo</option>
                        <option value=false>Inactivo</option>
                    </select>
                </div>
            </div>
        </div>
    </div>
    <div class="form-group row mb-1 mt-3">
        <div class="col-8 offset-2">
            @if (Model.TeachingAssignment.Id != 0)
            {
                <partial name="_ButtonsUpdateAndReturn" model="Model.TeachingAssignment.Id" />
            }
            else
            {
                <partial name="_ButtonsCreateAndReturn" />
            }
        </div>
    </div>
</form>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $('#datePicker').datetimepicker({
            format: 'dd/mm/yyyy',
            minDate: getFormattedDate(new Date())
        });

        function getFormattedDate(date) {
            var day = date.getDate();
            var month = date.getMonth() + 1;
            var year = date.getFullYear().toString().slice(2);
            return day + '-' + month + '-' + year;
        }


    </script>
}